[Unit]
Description=Varnish
After=docker.service
After=elb-presence@%i.service
Requires=docker.service
Wants=varnish-sidekick@%i.service

[Service]
Environment="DOCKER_APP_VERSION=latest"
TimeoutStartSec=0
# Change killmode from "control-group" to "none" to let Docker remove
# work correctly.
KillMode=none
ExecStartPre=-/bin/sh -c 'docker  kill %p-%i >/dev/null 2>&1'
ExecStartPre=-/bin/sh -c 'docker rm %p-%i >/dev/null 2>&1'
ExecStartPre=/bin/sh -c 'docker history up-registry.ft.com/coco/varnish:$DOCKER_APP_VERSION >/dev/null 2>&1 || docker pull up-registry.ft.com/coco/varnish:$DOCKER_APP_VERSION'

ExecStart=/bin/sh -c '\
  HTPASSWD=`etcdctl get /ft/_credentials/varnish/htpasswd`; \
  docker run --rm --name %p-%i -p 80:80 -e "VARNISH_BACKEND_HOST=%H" -e "VARNISH_BACKEND_PORT=8080" -e "NOTIFICATIONS_PUSH_PORT=8548" -e "HOST_HEADER=api-policy-component" -e "HTPASSWD=$HTPASSWD" up-registry.ft.com/coco/varnish:$DOCKER_APP_VERSION'
ExecStop=/usr/bin/docker stop -t 3 %p-%i

[X-Fleet]
Conflicts=%p@*.service
