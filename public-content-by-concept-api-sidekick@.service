[Unit]
Description=Public Content by Concept API Service Sidekick
BindsTo=public-content-by-concept-api@%i.service
After=public-content-by-concept-api@%i.service

[Service]
ExecStart=/bin/sh -c '\
  etcdctl set	/ft/services/public-content-by-concept-api/healthcheck  	true; \
  etcdctl mkdir /ft/services/public-content-by-concept-api/servers; \
  etcdctl set 	/ft/healthcheck/public-content-by-concept-api-%i/path 		/__health; \
  etcdctl set 	/ft/healthcheck/public-content-by-concept-api-%i/categories 	read; \
  etcdctl set   /vulcand/backends/public-services-content-by-concept/backend \'{\"Type\": \"http\", \"Settings\": {\"KeepAlive\": {\"MaxIdleConnsPerHost\": 256, \"Period\": \"35s\"}}}\'; \
  etcdctl set 	/vulcand/frontends/public-services-content-by-concept/frontend 	\'{"Type": "http", "BackendId": "vcb-public-content-by-concept-api", "Route": "PathRegexp(`^\/content.*isAnnotatedBy=.*$`) && Host(`public-services`)"}\'; \
  while true; do \
    PORT=`[ $PORT ] && echo $PORT || echo $(/usr/bin/docker port public-content-by-concept-api-%i 8080 | cut -d":" -f2)`; \
    curl -s -H "Accept: application/json" 0.0.0.0:$PORT/__health | jq -e \'[.checks[].ok] | all\' 2>&1>/dev/null && etcdctl set /ft/services/public-content-by-concept-api/servers/%i http://%H:$PORT --ttl 10; \
    sleep 5; \
  done'

ExecStop=/usr/bin/etcdctl rm /ft/services/public-content-by-concept-api/servers/%i
Restart=on-failure
RestartSec=60

[X-Fleet]
MachineOf=public-content-by-concept-api@%i.service
